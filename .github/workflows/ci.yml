name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m spacy download en_core_sci_scibert
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Test imports and basic functionality
      run: |
        python -c "import weaviate; print('Weaviate client import successful')"
        python -c "import spacy; nlp = spacy.load('en_core_sci_scibert'); print('spaCy model load successful')"
        python -c "import gradio; print('Gradio import successful')"
        python -c "import openai; print('OpenAI import successful')"
    
    - name: Check code formatting with black
      run: |
        pip install black
        black --check --diff .
    
    - name: Type checking with mypy
      run: |
        pip install mypy
        mypy medical_rag_chatbot.py --ignore-missing-imports
      continue-on-error: true  # Type checking is advisory for now

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan with bandit
      run: |
        pip install bandit[toml]
        bandit -r . -x ./venv312/ --format json --output bandit-report.json
      continue-on-error: true
    
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Test Docker Compose
      run: |
        docker-compose config
        echo "Docker Compose configuration is valid"
    
    - name: Start Weaviate
      run: |
        docker-compose up -d
        sleep 30
        curl -f http://localhost:8080/v1/.well-known/ready || exit 1
        echo "Weaviate health check passed"
    
    - name: Cleanup
      run: |
        docker-compose down -v
